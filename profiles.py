"""
This module manages the profile curves. Each profile has a name a min and a max line.

Profiles:
	"normal" - The common curve, less restrictive.
	"high" - Higher resistance to airflow.
"""

PROFILES = {
    "normal":{
        "min":[-0.08, -0.142476153, -0.175530249, -0.148740135, -0.133191707, -0.101464752, -0.107068629, -0.100188092, -0.118075419, -0.134580791, -0.092245242, -0.104090103, -0.083561972, -0.127454537, -0.201259658, -0.331028274, -0.427258167, -0.531863513, -0.61646286, -0.751030361, -0.879825998, -0.978746284, -1.072176064, -1.1345482, -1.206951593, -1.247300988, -1.293763973, -1.3459294, -1.388154994, -1.457187307, -1.506804745, -1.526098768, -1.617215004, -1.663275917, -1.708666437, -1.755493591, -1.742319498, -1.772363887, -1.80767604, -1.701037465, -1.527247995, -1.261045633, -0.95121416, -0.669702528, -0.459468138, -0.284885271, -0.156809931, -0.158049343, -0.140510861, -0.144186716, -0.127073897, -0.147600336, -0.146301727, -0.155025044, -0.12852033, -0.147580034, -0.12505528, -0.088591825, 0.000357664, 0.045273737, 0.071493465, 0.042098206, 0.057732589, 0.091956921, 0.123463225, 0.131942147, 0.117313632, 0.11753562, 0.142333322, 0.141569414, 0.131166974, 0.110897216, 0.123368677, 0.130441543, 0.156175658, 0.162372812, 0.149791017, 0.143938931, 0.1460307, 0.148281379, 0.143360588, 0.153821522, 0.149750939, 0.153629694, 0.145824539, 0.125120988, 0.069880197, 0.042171168, -0.00957497, -0.026930319, -0.087087961, -0.09602862, -0.089232189, -0.081404997, -0.070065283, -0.062505474, -0.068210482, -0.074967593, -0.072837048, -0.117093131, -0.11971358],
        "max":[0.05, 0.110501973, 0.097660303, 0.129088363, 0.151258518, 0.166229637, 0.192486744, 0.184477741, 0.201084474, 0.205518674, 0.218797449, 0.219395719, 0.231524037, 0.241926928, 0.213046096, 0.188354022, 0.1545888, 0.130672743, 0.096669107, 0.094964315, 0.06387603, 0.057730023, 0.05187919, 0.017515598, 0.029152826, 0.03061816, -0.00046836, -0.025345111, -0.031792273, -0.049727277, -0.046510731, -0.082752106, -0.076417764, -0.100296585, -0.109659694, -0.120524303, -0.140609863, -0.144305204, -0.138268917, -0.059420958, 0.00337553, 0.078202238, 0.108223664, 0.146089005, 0.184175052, 0.210943227, 0.205282063, 0.213448218, 0.23179604, 0.23257671, 0.244020394, 0.229959988, 0.282590056, 0.247230667, 0.283075648, 0.251544549, 0.291153961, 0.472485109, 0.636139084, 0.788091222, 0.887937165, 0.989603925, 1.079256801, 1.171302836, 1.212846621, 1.245122965, 1.275468239, 1.309324657, 1.353148919, 1.412587747, 1.486117798, 1.497552153, 1.525252144, 1.510884847, 1.502291239, 1.506365266, 1.520254247, 1.493422106, 1.51996225, 1.530506694, 1.508867765, 1.533780477, 1.529755355, 1.482636936, 1.47690963, 1.480240411, 1.26619345, 0.892116669, 0.658614024, 0.532868589, 0.414834475, 0.330918822, 0.280019223, 0.246557048, 0.248452036, 0.254515587, 0.230697756, 0.243086017, 0.228983588, 0.238191732, 0.22598457]},
    "high":{
        "min":[-0.05, -0.150790581, -0.14931226, -0.163690976, -0.163131223, -0.143237473, -0.127235243, -0.123801691, -0.129004106, -0.146770352, -0.125566517, -0.132192647, -0.125779569, -0.127454537, -0.201259658, -0.331028274, -0.427258167, -0.531863513, -0.61646286, -0.751030361, -0.879825998, -0.978746284, -1.072176064, -1.1345482, -1.206951593, -1.247300988, -1.293763973, -1.3459294, -1.388154994, -1.457187307, -1.506804745, -1.526098768, -1.617215004, -1.663275917, -1.708666437, -1.755493591, -1.742319498, -1.772363887, -1.80767604, -1.701037465, -1.527247995, -1.261045633, -0.95121416, -0.669702528, -0.459468138, -0.284885271, -0.202954028, -0.137294518, -0.098101998, -0.08528703, -0.087488599, -0.087029938, -0.091133418, -0.097122502, -0.081808685, -0.065649122, 0.008009298, 0.082842694, 0.205291676, 0.273346779, 0.327547562, 0.363195828, 0.41022863, 0.428612919, 0.479139723, 0.491505731, 0.508089897, 0.529460962, 0.561054995, 0.59191232, 0.610138285, 0.609199695, 0.603265741, 0.645927999, 0.653265017, 0.65948342, 0.659697061, 0.671714578, 0.662517324, 0.672336484, 0.661923741, 0.659262742, 0.626452732, 0.6133979, 0.588341912, 0.572194427, 0.463783728, 0.319376111, 0.193720516, 0.074797339, -0.007392442, -0.043478407, -0.035343883, -0.122814856, -0.101591036, -0.121174754, -0.103066132, -0.101610173, -0.073694146, -0.086693331, -0.066294247],
        "max":[0.05, 0.110501973, 0.097660303, 0.129088363, 0.151258518, 0.166229637, 0.192486744, 0.184477741, 0.201084474, 0.205518674, 0.218797449, 0.219395719, 0.231524037, 0.230078118, 0.164504504, 0.075324589, -0.02269601, -0.078193627, -0.090927017, -0.138853159, -0.192624944, -0.238747482, -0.313502763, -0.360674548, -0.410251778, -0.445901919, -0.449251265, -0.453710193, -0.494182874, -0.520008837, -0.527166198, -0.559848777, -0.612073857, -0.686866591, -0.702883225, -0.755514115, -0.769497151, -0.776014248, -0.767613985, -0.698315074, -0.589665739, -0.433673073, -0.265379911, -0.122704967, -0.02553354, 0.035201149, 0.102598918, 0.141726442, 0.17704708, 0.181814505, 0.213648093, 0.223814152, 0.282590056, 0.247230667, 0.283075648, 0.251544549, 0.291153961, 0.472485109, 0.636139084, 0.788091222, 0.887937165, 0.989603925, 1.079256801, 1.171302836, 1.212846621, 1.245122965, 1.275468239, 1.309324657, 1.353148919, 1.412587747, 1.486117798, 1.497552153, 1.525252144, 1.510884847, 1.502291239, 1.506365266, 1.520254247, 1.493422106, 1.51996225, 1.530506694, 1.508867765, 1.533780477, 1.529755355, 1.482636936, 1.47690963, 1.480240411, 1.26619345, 0.892116669, 0.658614024, 0.532868589, 0.414834475, 0.330918822, 0.280019223, 0.246557048, 0.248452036, 0.254515587, 0.230697756, 0.243086017, 0.228983588, 0.238191732, 0.22598457]},
    "calibrate":{
        "min":[-0.1, -0.130123517, -0.137200925, -0.11880272, -0.121263302, -0.132835213, -0.143931675, -0.1192231, -0.119274716, -0.10394095, -0.110413673, -0.148761412, -0.147057691, -0.149603389, -0.442054427, -3.233687039, -7.727827747, -11.43809225, -14.29469331, -16.63090124, -19.06919656, -22.81874571, -26.43051889, -29.80134016, -33.05549094, -36.03704086, -38.92046147, -41.60169005, -44.22081241, -46.63264852, -48.98454733, -51.60368025, -54.68256216, -57.38677788, -60.51981317, -63.75961828, -66.60240901, -69.17110565, -71.32368211, -73.15565154, -74.90504756, -77.04040565, -78.91414968, -78.20825777, -73.21578068, -65.90072657, -57.85835079, -49.72227605, -41.89650992, -34.64345585, -28.20350333, -22.61233992, -17.8472675, -13.88125331, -10.6829193, -8.095387652, -5.351657678, -1.012739938, 5.53754061, 10.41526844, 14.28429692, 17.57974631, 20.72273298, 23.85200605, 26.52633119, 28.854421, 31.00138768, 33.26043989, 35.61395042, 38.21836154, 41.05617855, 43.64818613, 46.66026865, 49.25877841, 50.7357668, 52.19221589, 53.68441569, 54.64843639, 55.56740157, 56.35979703, 56.97898547, 57.40025381, 57.58563689, 57.77510756, 57.66631821, 57.36832072, 56.61032261, 56.28277336, 55.82930407, 55.30057816, 50.7254845, 37.22334997, 25.21288945, 17.42847607, 11.74164886, 7.800558891, 5.200049188, 3.486110675, 2.262491714, 1.486386217, 0.957980822],
        "max":[0.1, 0.069876483, 0.062799075, 0.08119728, 0.078736698, 0.067164787, 0.056068325, 0.0807769, 0.080725284, 0.09605905, 0.089586327, 0.051238588, 0.052942309, 0.050396611, -0.242054427, -3.033687039, -7.527827747, -11.23809225, -14.09469331, -16.43090124, -18.86919656, -22.61874571, -26.23051889, -29.60134016, -32.85549094, -35.83704086, -38.72046147, -41.40169005, -44.02081241, -46.43264852, -48.78454733, -51.40368025, -54.48256216, -57.18677788, -60.31981317, -63.55961828, -66.40240901, -68.97110565, -71.12368211, -72.95565154, -74.70504756, -76.84040565, -78.71414968, -78.00825777, -73.01578068, -65.70072657, -57.65835079, -49.52227605, -41.69650992, -34.44345585, -28.00350333, -22.41233992, -17.6472675, -13.68125331, -10.4829193, -7.895387652, -5.151657678, -0.812739938, 5.73754061, 10.61526844, 14.48429692, 17.77974631, 20.92273298, 24.05200605, 26.72633119, 29.054421, 31.20138768, 33.46043989, 35.81395042, 38.41836154, 41.25617855, 43.84818613, 46.86026865, 49.45877841, 50.9357668, 52.39221589, 53.88441569, 54.84843639, 55.76740157, 56.55979703, 57.17898547, 57.60025381, 57.78563689, 57.97510756, 57.86631821, 57.56832072, 56.81032261, 56.48277336, 56.02930407, 55.50057816, 50.9254845, 37.42334997, 25.41288945, 17.62847607, 11.94164886, 8.000558891, 5.400049188, 3.686110675, 2.462491714, 1.686386217, 1.157980822]
                }
         }


class Profile:
    """
    p1 = profiles.Profile("normal")
    p1.step(i,data)
    p1.report()
    """
    def __init__(self, name):
        self.name = name
        self.min = PROFILES[name]["min"]
        self.max = PROFILES[name]["max"]
        self.failed = False
        self.points = 0
        self.failed_points = 0

    def step(self, index, data):
        """
        Test a step on the profile.
        Takes:
           index - the step to evaluate
           data - the current value at that step
        Returns:
           True - if the data is within the profile at that step.
           False - if the data is outside of the profile.
        """
        self.points += 1
        if data < self.max[index] and data > self.min[index]:
            return True
        else:
            self.failed = True
            self.failed_points += 1
            return False

    def step_plot(self, index, data):
        """
        Test a step on the profile returns enough detail to plot
        Takes:
           index - the step to evaluate
           data - the current value at that step
        Returns a dictionary containing:
           status:
               True - if the data is within the profile at that step.
               False - if the data is outside of the profile.
           min: The profile minimum at this index point
           max: The profile maximum at this index point
        """
        self.points += 1
        if data < self.max[index] and data > self.min[index]:
            return {"status":True, "min":self.min[index], "max":self.max[index]}
        else:
            self.failed = True
            self.failed_points += 1
            return {"status":False, "min":self.min[index], "max":self.max[index]}

    def report(self):
        """
        Returns a report on the profile run.
        """
        if self.failed:
            return {"passed":False, "points":self.points, "failed_points":self.failed_points}
        else:
            return {"passed":True, "points":self.points, "failed_points":0}
